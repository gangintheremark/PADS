######################################################
# 커밋 유형은 첫자만 영어 대문자로 작성하기
# Feat (o) feat (x) FEAT (x)
# 긴급, 중요사항에 대해서는 ! + 전체를 대문자로
# !HOTFIX (o) !hotfix (x) !Hotfix (x)
#
# 커밋 유형 | 의미
# --- | ---
# Feat | 새로운 기능 추가
# Fix | 버그 수정
# Docs | 문서 수정
# Style | 코드 formatting, 세미콜론 누락, 코드 자체의 변경이 없는 경우
# Refactor | 코드 리팩토링
# Test | 테스트 코드, 리팩토링 테스트 코드 추가
# Chore | 패키지 매니저 수정, 그 외 기타 수정 ex .gitignore
# Design | CSS 등 사용자 UI 디자인 변경
# Comment | 필요한 주석 추가 및 변경
# Rename | 파일 또는 폴더 명을 수정하거나 옮기는 작업만인 경우
# Remove | 파일을 삭제하는 작업만 수행한 경우
# !BREAKING CHANGE | 커다란 API 변경의 경우
# !HOTFIX | 급하게 치명적인 버그를 고쳐야 하는 경우
#
# VS code 를 commit message editor로 지정
# git config --global core.editor "code --wait"
# 
# .gitmessage.txt를 Default commit message로 등록하는방법
# git config commit.template .gitmessage.txt

##############################
# 예시
# 
# Fix : 검색 API 버그수정
#
# - 변경 내용 1
# - 변경 내용 2
# - 변경 내용 3
#############################
# 아래에 작성
